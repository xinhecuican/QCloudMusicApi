cmake_minimum_required(VERSION 3.14)

project(QCloudMusicApiProject VERSION 1.0)

set(CMAKE_CXX_STANDARD 17)

option(MUSICAPI_TEST "Build Test" OFF)
option(MUSICAPI_SERVER "Build ApiServer" OFF)
option(MUSICAPI_SETOUTPUTPATH "Set default output path" ON)

if(ANDROID OR IOS)
    set(MUSICAPI_SETOUTPUTPATH OFF)
endif()
# 生成动态库
option(BUILD_SHARED_LIBS "Build shared libraries" ON)

if(MUSICAPI_SETOUTPUTPATH)
    # set default output path
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE}/${CMAKE_INSTALL_BINDIR})
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE}/${CMAKE_INSTALL_LIBDIR})
    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE}/${CMAKE_INSTALL_BINDIR})
    set(CMAKE_PDB_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE}/${CMAKE_INSTALL_BINDIR})
    set(CMAKE_HEADER_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE}/include)

    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_${CMAKE_BUILD_TYPE} ${CMAKE_RUNTIME_OUTPUT_DIRECTORY})
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_${CMAKE_BUILD_TYPE} ${CMAKE_LIBRARY_OUTPUT_DIRECTORY})
    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_${CMAKE_BUILD_TYPE} ${CMAKE_ARCHIVE_OUTPUT_DIRECTORY})
    set(CMAKE_PDB_OUTPUT_DIRECTORY_${CMAKE_BUILD_TYPE} ${CMAKE_PDB_OUTPUT_DIRECTORY})


    # 设置安装前缀为二进制目录
    set(CMAKE_INSTALL_PREFIX ${CMAKE_BINARY_DIR})
endif()

add_subdirectory(QCloudMusicApi)
if(MUSICAPI_TEST)
    add_subdirectory(Test)
endif()

find_package(QT NAMES Qt6 Qt5)
# find_package(Qt${QT_VERSION_MAJOR} COMPONENTS HttpServer)
# if(Qt${QT_VERSION_MAJOR}HttpServer_FOUND)
#    # Qt6.4后才支持QHttpServer库
#    if(MUSICAPI_SERVER)
#        add_subdirectory(ApiServer)
#    endif()
# endif()

